<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">Blockify.csproj</projectFile>
    <projectFile profileName="https">Blockify.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="80304cd6-2d6e-4c16-bf51-a9b49649efa9" name="Changes" comment="Moved to Services Configuration classes to Api/Configuration/External_Services_Configuration">
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Blockify.dir/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Blockify.dir/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Application/Services/Spotify/SpotifyService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Application/Services/Spotify/SpotifyService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Infrastructure/Genius/GeniusClient.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Infrastructure/Genius/GeniusClient.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Infrastructure/Genius/IGeniusClient.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Infrastructure/Genius/IGeniusClient.cs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JSON File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DanielPadre58&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/DanielPadre58/Blockify",
    "accountId": "55a69886-2511-467e-9d8c-bcb073b16f10"
  }
}]]></component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/ILViewer/668934cd3d1647259613d9041c96c31f1ce00/46/101fcad9/02000031pdb15.il" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Users/2kupw/projects/dotnet/Blockify/Blockify/Api/Configuration/ApplicationConfigurator.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Api/Configuration/External Services Configuration/GeminiConfiguration.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Users/2kupw/projects/dotnet/Blockify/Blockify/Api/Configuration/External Services Configuration/GeniusConfiguration.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Api/Configuration/External Services Configuration/GeniusConfiguration.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Users/2kupw/projects/dotnet/Blockify/Blockify/Api/Configuration/External Services Configuration/SpotifyConfiguration.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Api/Controllers/TestController.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Application/DTOs/GeminiRequestContent.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Application/Services/Blockify/BlockifyService.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Users/2kupw/projects/dotnet/Blockify/Blockify/Application/Services/Spotify/SpotifyService.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Infrastructure/Gemini/GeminiClient.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Users/2kupw/projects/dotnet/Blockify/Blockify/Infrastructure/Gemini/GeminiClient.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Infrastructure/Genius/GeniusClient.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Users/2kupw/projects/dotnet/Blockify/Blockify/Infrastructure/Genius/GeniusClient.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Users/2kupw/projects/dotnet/Blockify/Blockify/Infrastructure/Spotify/Client/SpotifyClient.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="false" />
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="33m3SQpJONCvRDKDTzORC4q2uaR" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.Launch Settings Https.executor": "Run",
    "Docker.Docker.executor": "Run",
    "Docker.Unnamed.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "RunOnceActivity.git.unshallow": "true",
    "deletionFromPopupRequiresConfirmation": "false",
    "git-widget-placeholder": "implementation__geniusapi__integration",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RunManager" selected=".NET Launch Settings Profile.Launch Settings Https">
    <configuration name="Launch Settings Https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Blockify.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <option name="AUTO_ATTACH_CHILDREN" value="0" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Docker" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="" />
          <option name="sourceFilePath" value="../Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue=".NET Launch Settings Profile.Launch Settings Https" />
      <item itemvalue="Docker.Docker" />
    </list>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="80304cd6-2d6e-4c16-bf51-a9b49649efa9" name="Changes" comment="" />
      <created>1759908424706</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1759908424706</updated>
      <workItem from="1759908435818" duration="19135000" />
      <workItem from="1759954457642" duration="237000" />
      <workItem from="1759954747426" duration="5340000" />
      <workItem from="1759995712030" duration="108000" />
      <workItem from="1759995871600" duration="3874000" />
      <workItem from="1760007406695" duration="359000" />
      <workItem from="1760031045952" duration="386000" />
      <workItem from="1760031465159" duration="2024000" />
      <workItem from="1760033540296" duration="157000" />
      <workItem from="1760033724147" duration="3308000" />
    </task>
    <task id="LOCAL-00001" summary="Moved Spotify API mappers to Infrastructure layer">
      <option name="closed" value="true" />
      <created>1759910084890</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1759910084890</updated>
    </task>
    <task id="LOCAL-00002" summary="Refactored Spotify configuration dto to have both fields as required and init only">
      <option name="closed" value="true" />
      <created>1759913022265</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1759913022265</updated>
    </task>
    <task id="LOCAL-00003" summary="Gemini initial configuration implementation">
      <option name="closed" value="true" />
      <created>1759913084681</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1759913084681</updated>
    </task>
    <task id="LOCAL-00004" summary="Gemini client implementation as long as the httpclient injection">
      <option name="closed" value="true" />
      <created>1759913112192</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1759913112192</updated>
    </task>
    <task id="LOCAL-00005" summary="Blockify service implementation, that will be responsible of tasks that require a more complex structure">
      <option name="closed" value="true" />
      <created>1759923334142</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1759923334142</updated>
    </task>
    <task id="LOCAL-00006" summary="Made fields init only">
      <option name="closed" value="true" />
      <created>1759923362161</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1759923362161</updated>
    </task>
    <task id="LOCAL-00007" summary="Send prompt to the Gemini api and returns the http response">
      <option name="closed" value="true" />
      <created>1759923435526</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1759923435526</updated>
    </task>
    <task id="LOCAL-00008" summary="Dto that will hold the information about the song that gemini will analyze">
      <option name="closed" value="true" />
      <created>1759924018464</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1759924018464</updated>
    </task>
    <task id="LOCAL-00009" summary="Query to select the existing keyword playlists that blockify created for a user">
      <option name="closed" value="true" />
      <created>1759960337326</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1759960337326</updated>
    </task>
    <task id="LOCAL-00010" summary="Migration 5, added keyword value to the playlists table">
      <option name="closed" value="true" />
      <created>1759960405457</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1759960405457</updated>
    </task>
    <task id="LOCAL-00011" summary="Added curly braces for code consistency">
      <option name="closed" value="true" />
      <created>1759960435656</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1759960435656</updated>
    </task>
    <task id="LOCAL-00012" summary="Created a new method that returns a list of playlists based on query response">
      <option name="closed" value="true" />
      <created>1759960481324</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1759960481324</updated>
    </task>
    <task id="LOCAL-00013" summary="Name field is now required, because it is needed to identify all userss keywords">
      <option name="closed" value="true" />
      <created>1759960531327</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1759960531327</updated>
    </task>
    <task id="LOCAL-00014" summary="Updated to fifth migration">
      <option name="closed" value="true" />
      <created>1759960683303</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1759960683303</updated>
    </task>
    <task id="LOCAL-00015" summary="Get all users keywords playlists endpoint">
      <option name="closed" value="true" />
      <created>1759961068836</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1759961068836</updated>
    </task>
    <task id="LOCAL-00016" summary="Dto that will store all information that the AI will need to determine the song keyword as well as some additional (optional) contextual information">
      <option name="closed" value="true" />
      <created>1759961139137</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1759961139137</updated>
    </task>
    <task id="LOCAL-00017" summary="?">
      <option name="closed" value="true" />
      <created>1759961163014</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1759961163014</updated>
    </task>
    <task id="LOCAL-00018" summary="Client responsible for comunicating with the Genius API and all depencies were injected">
      <option name="closed" value="true" />
      <created>1760000096603</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1760000096603</updated>
    </task>
    <task id="LOCAL-00019" summary="Class responsible for storing Genius configurations data">
      <option name="closed" value="true" />
      <created>1760000131792</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1760000131792</updated>
    </task>
    <task id="LOCAL-00020" summary="Inject Genius configuration to GeniusConfiguration.cs">
      <option name="closed" value="true" />
      <created>1760000156352</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1760000156352</updated>
    </task>
    <task id="LOCAL-00021" summary="Moved to Services Configuration classes to Api/Configuration/External_Services_Configuration">
      <option name="closed" value="true" />
      <created>1760034498520</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1760034498520</updated>
    </task>
    <option name="localTasksCounter" value="22" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="false" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Moved Spotify API mappers to Infrastructure layer" />
    <MESSAGE value="Refactored Spotify configuration dto to have both fields as required and init only" />
    <MESSAGE value="Gemini initial configuration implementation" />
    <MESSAGE value="Gemini client implementation as long as the httpclient injection" />
    <MESSAGE value="Blockify service implementation, that will be responsible of tasks that require a more complex structure" />
    <MESSAGE value="Made fields init only" />
    <MESSAGE value="Send prompt to the Gemini api and returns the http response" />
    <MESSAGE value="Dto that will hold the information about the song that gemini will analyze" />
    <MESSAGE value="Query to select the existing keyword playlists that blockify created for a user" />
    <MESSAGE value="Migration 5, added keyword value to the playlists table" />
    <MESSAGE value="Added curly braces for code consistency" />
    <MESSAGE value="Created a new method that returns a list of playlists based on query response" />
    <MESSAGE value="Name field is now required, because it is needed to identify all userss keywords" />
    <MESSAGE value="Updated to fifth migration" />
    <MESSAGE value="Get all users keywords playlists endpoint" />
    <MESSAGE value="Dto that will store all information that the AI will need to determine the song keyword as well as some additional (optional) contextual information" />
    <MESSAGE value="?" />
    <MESSAGE value="Client responsible for comunicating with the Genius API and all depencies were injected" />
    <MESSAGE value="Class responsible for storing Genius configurations data" />
    <MESSAGE value="Inject Genius configuration to GeniusConfiguration.cs" />
    <MESSAGE value="Moved to Services Configuration classes to Api/Configuration/External_Services_Configuration" />
    <option name="LAST_COMMIT_MESSAGE" value="Moved to Services Configuration classes to Api/Configuration/External_Services_Configuration" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>